
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    function getUserCompanyId(userId) {
      return getUserData(userId).company.id;
    }
    
    function isUserAdmin(userId) {
      return getUserData(userId).company.role == 'Admin';
    }

    match /users/{userId} {
      allow create: if isUserAuthenticated();
      
      // A user can read their own profile.
      // An admin can read profiles of users in their company.
      allow read: if isUserAuthenticated() && (request.auth.uid == userId || 
                  (isUserAdmin(request.auth.uid) && getUserCompanyId(request.auth.uid) == getUserCompanyId(userId)));
      
      // A user can update their own profile info.
      // An admin can update another user's role.
      allow update: if (request.auth.uid == userId && request.resource.data.keys().hasOnly(['profile'])) ||
                   (isUserAdmin(request.auth.uid) && getUserCompanyId(request.auth.uid) == getUserCompanyId(userId) && request.resource.data.keys().hasAny(['company.role']));

      // Only an admin can remove a user from the company.
      allow delete: if isUserAdmin(request.auth.uid) && getUserCompanyId(request.auth.uid) == getUserCompanyId(userId);
    }
    
    match /companies/{companyId} {
      allow create: if isUserAuthenticated();

      // Any user belonging to the company can read the company document.
      allow read: if isUserAuthenticated() && getUserCompanyId(request.auth.uid) == companyId;
      
      // Only Admins can update company settings or roles.
      allow update: if isUserAdmin(request.auth.uid) && getUserCompanyId(request.auth.uid) == companyId;
      
      allow delete: if false;

      // SUBCOLLECTIONS
      match /invites/{inviteId} {
          // Anyone with a link can read a pending invite to verify it.
          allow read: if resource.data.status == 'pending';
          
          // Admins can create and manage invites.
          allow create, update, delete: if isUserAdmin(request.auth.uid) && getUserCompanyId(request.auth.uid) == companyId;
          
          // Allow an authenticated user to accept an invite.
          allow update: if isUserAuthenticated() && request.resource.data.status == 'accepted';
      }
      
      match /audit_logs/{logId} {
        allow read: if isUserAdmin(request.auth.uid) && getUserCompanyId(request.auth.uid) == companyId;
        allow write: if false;
      }
    }
    
    match /contacts/{contactId} {
      // Anyone can submit the form.
      allow create: if true;
      
      // Only admins can read the submitted enquiries.
      allow read: if isUserAdmin(request.auth.uid);
      
      // No one should update or delete from the client.
      allow update, delete: if false;
    }
  }
}
