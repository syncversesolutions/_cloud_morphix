
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin of a given company.
    function isCompanyAdmin(companyId, userId) {
      let userRole = get(/databases/$(database)/documents/companies/$(companyId)/users/$(userId)).data.role;
      return userRole == 'Admin';
    }

    // New lookup collection: Allows a user to manage their own lookup document.
    match /user_company_lookup/{userId} {
      allow read, create, update, delete: if request.auth.uid == userId;
    }

    // Main companies collection
    match /companies/{companyId} {
      // Allow read if user is part of the company's user sub-collection.
      allow read: if exists(/databases/$(database)/documents/companies/$(companyId)/users/$(request.auth.uid));
      // Allow any authenticated user to create a new company.
      allow create: if request.auth != null;
      // Allow updates only by admins of that company.
      allow update: if isCompanyAdmin(companyId, request.auth.uid);
      
      // Users sub-collection
      match /users/{userId} {
        // Allow reads by the user themselves or by a company admin.
        allow read: if request.auth.uid == userId || isCompanyAdmin(companyId, request.auth.uid);
        // Allow a user to create their own user document (on registration/invite accept).
        allow create: if request.auth.uid == userId;
        // Allow updates by the user themselves (for their profile) or by an admin.
        allow update: if request.auth.uid == userId || isCompanyAdmin(companyId, request.auth.uid);
        // Allow deletion only by an admin.
        allow delete: if isCompanyAdmin(companyId, request.auth.uid);
      }
      
      // Invites sub-collection
      match /invites/{inviteId} {
        // Allow anyone to read a specific invite document using its link.
        allow get: if true;
        // Allow admins to list invites, create new ones, and update them.
        allow list, create, update, delete: if isCompanyAdmin(companyId, request.auth.uid);
      }
      
      // Audit logs sub-collection (admin only)
      match /audit_logs/{logId} {
      	allow read, create: if isCompanyAdmin(companyId, request.auth.uid);
      }
    }
    
    // Contact form submissions
    match /contacts/{contactId} {
      // Allow anyone to submit the form.
      allow create: if true;
      // Admins can read enquiries via a backend function (getContacts). Client reads are disallowed.
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/user_company_lookup/$(request.auth.uid)).data.companyId != null && isCompanyAdmin(get(/databases/$(database)/documents/user_company_lookup/$(request.auth.uid)).data.companyId, request.auth.uid);
    }
  }
}

    