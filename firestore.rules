rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ---- HELPER FUNCTIONS ----

    function isSignedIn() {
      return request.auth != null;
    }

    function isNewUserRegistration() {
      return isSignedIn() && !exists(/databases/$(database)/documents/user_company_lookup/$(request.auth.uid));
    }

    function getUserCompanyId() {
      return get(/databases/$(database)/documents/user_company_lookup/$(request.auth.uid)).data.companyId;
    }

    function isUserInCompany(companyId) {
      return getUserCompanyId() == companyId;
    }

    function getUserData(userId) {
      let companyId = getUserCompanyId();
      return get(/databases/$(database)/documents/companies/$(companyId)/users/$(userId)).data;
    }
    
    function hasPermission(permission) {
        let userRole = getUserData(request.auth.uid).role;
        let companyId = getUserCompanyId();
        let rolePermissions = get(/databases/$(database)/documents/companies/$(companyId)/roles/$(userRole)).data.allowed_actions;
        return permission in rolePermissions;
    }

    function isPlatformAdmin() {
        let companyId = getUserCompanyId();
        if (!exists(/databases/$(database)/documents/companies/$(companyId))) {
          return false;
        }
        let companyData = get(/databases/$(database)/documents/companies/$(companyId)).data;
        let userData = getUserData(request.auth.uid);
        return userData.role == 'Admin' && (companyData.company_name.lower() == 'cloud morphix' || companyData.company_name.lower() == 'loud morphix');
    }

    // ---- COLLECTION RULES ----

    match /companies/{companyId} {
      allow get: if isSignedIn() && isUserInCompany(companyId);
      allow list, get: if isPlatformAdmin();
      allow create: if isNewUserRegistration();
      allow update: if false; // Add specific update rules if needed
    }
    
    match /companies/{companyId}/users/{userId} {
      allow get: if isSignedIn() && isUserInCompany(companyId) && (request.auth.uid == userId || hasPermission('manage_users'));
      allow list: if isSignedIn() && isUserInCompany(companyId) && hasPermission('manage_users');
      allow create: if (isNewUserRegistration() && request.auth.uid == userId) || (isSignedIn() && isUserInCompany(companyId) && hasPermission('manage_users'));
      allow update: if (isSignedIn() && request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['fullName'])) ||
                       (isSignedIn() && isUserInCompany(companyId) && hasPermission('manage_users') && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role']));
      allow delete: if isSignedIn() && isUserInCompany(companyId) && hasPermission('manage_users') && request.auth.uid != userId;
    }
    
    match /companies/{companyId}/roles/{roleId} {
      allow read: if isSignedIn() && isUserInCompany(companyId);
      allow write: if isSignedIn() && isUserInCompany(companyId) && hasPermission('manage_roles');
    }
    
    match /companies/{companyId}/audit_logs/{logId} {
      allow read: if isSignedIn() && isUserInCompany(companyId);
      allow create: if isSignedIn() && isUserInCompany(companyId);
    }

    match /user_company_lookup/{userId} {
      allow create: if isNewUserRegistration() && request.auth.uid == userId;
      allow read, update: if false;
      allow delete: if isSignedIn() && hasPermission('manage_users');
    }
    
    match /contacts/{contactId} {
      allow create: if isSignedIn();
      allow read: if isPlatformAdmin();
    }
  }
}
